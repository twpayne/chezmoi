symlink archive/dir/symlink -> file
exec tar czf www/archive.tar.gz archive

httpd www

# test that chezmoi diff includes external files by default
exec chezmoi diff
stdout '^diff --git a/\.file b/\.file$'

# test that chezmoi diff --exclude=externals excludes diffs from external files
exec chezmoi diff --exclude=externals
! stdout '^diff --git a/\.file b/\.file$'

# test that chezmoi reads external files from .chezmoiexternal.toml
exec chezmoi apply --force
cmp $HOME/.file golden/.file
[!windows] cmpmod 666 $HOME/.file

chhome home2/user

# test that chezmoi reads executable external files from .chezmoiexternal.toml
exec chezmoi apply --force
cmp $HOME/.file golden/.file
[!windows] cmpmod 777 $HOME/.file

chhome home3/user

# test that chezmoi managed --include=externals lists external targets
exec chezmoi managed --include=externals
cmp stdout golden/managed

# test that chezmoi diff includes external archives by default
exec chezmoi diff
stdout '^diff --git a/\.dir/dir/file b/\.dir/dir/file$'

# test that chezmoi diff --exclude=externals excludes diffs from external archives
exec chezmoi diff --exclude=externals
! stdout '^diff --git a/\.dir/dir/file b/\.dir/dir/file$'

# test that chezmoi reads external archives from .chezmoiexternal.yaml
exec chezmoi apply --force
cmp $HOME/.dir/dir/file golden/dir/file
[!windows] readlink $HOME/.dir/dir/symlink file
exists $HOME/.dir/file

chhome home4/user

# test that chezmoi reads exact external archives from .chezmoiexternal.yaml
exec chezmoi apply --force
cmp $HOME/.dir/dir/file golden/dir/file
[!windows] readlink $HOME/.dir/dir/symlink file
! exists $HOME/.dir/file

chhome home5/user

# test that chezmoi reads externals from subdirectories
exec chezmoi apply --force
cmp $HOME/.dir/subdir/dir/file golden/dir/file
[!windows] readlink $HOME/.dir/subdir/dir/symlink file

chhome home6/user

# test that .chezmoiignore applies to entries in externals
exec chezmoi apply --force
exists $HOME/.dir/dir/
exists $HOME/.dir/dir/file
! exists $HOME/.dir/dir/symlink

chhome home7/user

# test that .chezmoiignore applies to entire externals
exec chezmoi apply --force

chhome home8/user

# test that parent directories are created if needed
exec chezmoi apply --force
cmp $HOME/.dir1/file golden/dir/file
cmp $HOME/.dir2/dir2/file golden/dir/file
cmp $HOME/.dir3/dir3/dir3/file golden/dir/file

chhome home9/user

# test that duplicate equivalent directories are allowed
exec chezmoi apply --force

chhome home10/user

# test that checksums are verified
exec chezmoi apply --force
cp $HOME/.file golden/.file

chhome home11/user

# test that checksums detect corrupt files
! exec chezmoi apply --force
stderr 'MD5 mismatch'
stderr 'SHA256 mismatch'

-- archive/dir/file --
# contents of dir/file
-- golden/.file --
# contents of .file
-- golden/dir/file --
# contents of dir/file
-- golden/managed --
.dir
.dir/dir
.dir/dir/file
.dir/dir/symlink
-- home/user/.local/share/chezmoi/.chezmoiexternal.toml --
[".file"]
    type = "file"
    url = "{{ env "HTTPD_URL" }}/.file"
-- home10/user/.local/share/chezmoi/.chezmoiexternal.yaml --
.file:
    type: file
    url: {{ env "HTTPD_URL" }}/.file
    checksum:
        size: 20
        md5: 49fe9018f97349cdd0a0ac7b7f668b05
        ripemd160: 2320636f6e74656e7473206f66202e66696c650a9c1185a5c5e9fc54612808977ee8f548b2258d31
        sha1: cb91d72dc73f6d984b33ac5745f1cf6f76745bd2
        sha256: 634a4dd193c7b3b926d2e08026aa81a416fd41cec52854863b974af422495663
        sha384: f8545bb66433eb514727bbc61c4e4939c436d38079767f39f12b8803d6472ca1dfcd101675b20cd525f7e3d02c368b61
        sha512: a68814ec3d16e8bd28c9291bbc596f0282687c5ba5d1f4c26c4e427166666a03c11df1dab3577b4483142764c37d4887def77244c4a52cb9852a234fa8cb15ba
-- home11/user/.local/share/chezmoi/.chezmoiexternal.toml --
[".file"]
    type = "file"
    url = "{{ env "HTTPD_URL" }}/.corrupt-file"
    checksum.md5 = "49fe9018f97349cdd0a0ac7b7f668b05"
    checksum.sha256 = "634a4dd193c7b3b926d2e08026aa81a416fd41cec52854863b974af422495663"
-- home2/user/.local/share/chezmoi/.chezmoiexternal.toml --
[".file"]
    type = "file"
    url = "{{ env "HTTPD_URL" }}/.file"
    executable = true
-- home3/user/.dir/file --
-- home3/user/.local/share/chezmoi/.chezmoiexternal.yaml --
.dir:
    type: archive
    url: {{ env "HTTPD_URL" }}/archive.tar.gz
    stripComponents: 1
-- home4/user/.dir/file --
-- home4/user/.local/share/chezmoi/.chezmoiexternal.yaml --
.dir:
    type: archive
    url: {{ env "HTTPD_URL" }}/archive.tar.gz
    exact: true
    stripComponents: 1
-- home5/user/.local/share/chezmoi/dot_dir/.chezmoiexternal.yaml --
subdir:
    type: archive
    url: {{ env "HTTPD_URL" }}/archive.tar.gz
    exact: true
    stripComponents: 1
-- home6/user/.local/share/chezmoi/.chezmoiexternal.yaml --
.dir:
    type: archive
    url: {{ env "HTTPD_URL" }}/archive.tar.gz
    exact: true
    stripComponents: 1
-- home6/user/.local/share/chezmoi/.chezmoiignore --
.dir/dir/symlink
-- home7/user/.local/share/chezmoi/.chezmoiexternal.yaml --
.dir:
    type: archive
    url: {{ env "HTTPD_URL" }}/non-existent-archive.tar.gz
-- home7/user/.local/share/chezmoi/.chezmoiignore --
.dir
-- home8/user/.local/share/chezmoi/.chezmoiexternal.toml --
[".dir1"]
    type = "archive"
    url = "{{ env "HTTPD_URL" }}/archive.tar.gz"
    stripComponents = 2
[".dir2/dir2"]
    type = "archive"
    url = "{{ env "HTTPD_URL" }}/archive.tar.gz"
    stripComponents = 2
[".dir3/dir3/dir3"]
    type = "archive"
    url = "{{ env "HTTPD_URL" }}/archive.tar.gz"
    stripComponents = 2
-- home9/user/.local/share/chezmoi/.chezmoiexternal.toml --
[".dir"]
    type = "archive"
    url = "{{ env "HTTPD_URL" }}/archive.tar.gz"
    stripComponents = 1
-- home9/user/.local/share/chezmoi/dot_dir/file2 --
# contents of .dir/file2
-- www/.corrupt-file --
# corrupt contents of .file
-- www/.file --
# contents of .file
