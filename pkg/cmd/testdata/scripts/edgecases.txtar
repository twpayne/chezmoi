# test that the source directory can be a symlink to another directory
symlink $HOME/.chezmoi -> $CHEZMOISOURCEDIR
exec chezmoi apply --source=$HOME${/}.chezmoi
cmp $HOME/.file golden/.file

# test that adding a directory ending in a slash only adds the directory once
mkdir $HOME/.dir
exec chezmoi add $HOME${/}.dir/
! exists $CHEZMOISOURCEDIR/dot_dir/dot_dir

chhome home2/user

# test that chezmoi reports an inconsistent state error when a file should be both removed and present
! exec chezmoi apply
stderr 'chezmoi: \.file: inconsistent state'

chhome home3/user

# test that chezmoi reports an error if there is a .chezmoi* file in the .chezmoitemplates directory
! exec chezmoi status
! stderr 'not allowed in \.chezmoitemplates directory'

# test that chezmoi data returns an error if an unknown read format is specified
! exec chezmoi init --config-format=yml
stderr 'invalid or unsupported data format'

# test that chezmoi data returns an error if an unknown write format is specified
! exec chezmoi data --format=yml
stderr 'invalid or unsupported data format'

skip 'FIXME make the following test pass'
chhome home5/user

# test that chezmoi reports an inconsistent state error when a file should be both removed and present, even if the file is not already present
! exec chezmoi apply
stderr 'chezmoi: \.file: inconsistent state

-- golden/.file --
# contents of .file
-- home/user/.local/share/chezmoi/dot_file --
# contents of .file
-- home2/user/.file --
# contents of .file
-- home2/user/.local/share/chezmoi/.chezmoiremove --
.file
-- home2/user/.local/share/chezmoi/dot_file --
# contents of .file
-- home3/user/.local/share/chezmoi/.chezmoitemplates/.chezmoiignore --
-- home4/user/.local/share/chezmoi/.chezmoiremove --
.file
-- home5/user/.local/share/chezmoi/dot_file --
# contents of .file
