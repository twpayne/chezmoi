name: main
on:
  pull_request:
  push:
    branches:
    - master
    tags:
    - v*
env:
  AGE_VERSION: 1.0.0
  GO_VERSION: 1.17.1
  GOLANGCI_LINT_VERSION: 1.42.1
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os:
        - macos-latest
        - ubuntu-18.04
        - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GO_VERSION }}
    - name: Checkout
      uses: actions/checkout@v2
    - name: Cache Go modules
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Build
      run: |
        go build ./...
    - name: Run
      run: |
        go run . --version
    - name: Install age (Linux/macOS)
      if: runner.os == 'Linux' || runner.os == 'macOS'
      run: |
        cd $(mktemp -d)
        goos=$(uname -s | tr '[:upper:]' '[:lower:]')
        curl -fsSL https://dl.filippo.io/age/v${AGE_VERSION}?for=${goos}/amd64 | tar xzf -
        sudo install -m 755 age/age /usr/local/bin
        sudo install -m 755 age/age-keygen /usr/local/bin
    - name: Install age (Windows)
      if: runner.os == 'Windows'
      run: |
        $env:PATH = "C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\ProgramData\chocolatey\bin"
        [Environment]::SetEnvironmentVariable("Path", $env:PATH, "Machine")
        choco install --yes age.portable
    - name: Test (UNIX, umask 022)
      if: runner.os != 'Windows'
      run: go test -ldflags="-X github.com/twpayne/chezmoi/internal/chezmoitest.umaskStr=0o022" -race ./...
    - name: Test (UNIX, umask 002)
      if: runner.os != 'Windows'
      run: go test -ldflags="-X github.com/twpayne/chezmoi/internal/chezmoitest.umaskStr=0o002" -race ./...
    - name: Test (Windows)
      if: runner.os == 'Windows'
      run: go test -race ./...
    - name: Upload artifact chocolatey.log
      if: runner.os == 'Windows' # FIXME && failure()
      uses: actions/upload-artifact@v2
      with:
        name: chocolatey.log
        path: C:/ProgramData/chocolatey/logs/chocolatey.log
  test-release:
    runs-on: ubuntu-18.04
    steps:
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get -yq --no-install-suggests --no-install-recommends install musl-tools snapcraft
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GO_VERSION }}
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cache Go modules
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Build release
      uses: goreleaser/goreleaser-action@v2
      with:
        version: latest
        args: release --skip-publish --snapshot
    - name: Test release
      run: |
        # verify that version information is embedded correctly
        file ./dist/chezmoi-cgo-glibc_linux_amd64/chezmoi | tee /dev/stderr | grep -q "dynamically linked"
        file ./dist/chezmoi-cgo-musl_linux_amd64/chezmoi | tee /dev/stderr | grep -q "statically linked"
        ./dist/chezmoi-cgo-glibc_linux_amd64/chezmoi --version | tee /dev/stderr | grep -q "chezmoi version v2"
        ./dist/chezmoi-cgo-musl_linux_amd64/chezmoi --version | tee /dev/stderr | grep -q "chezmoi version v2"
        ./dist/chezmoi-nocgo_linux_386/chezmoi --version | tee /dev/stderr | grep -q "chezmoi version v2"
    - name: Upload artifact chezmoi-linux-amd64
      uses: actions/upload-artifact@v2
      with:
        name: chezmoi-linux-amd64
        path: dist/chezmoi-cgo-glibc_linux_amd64/chezmoi
    - name: Upload artifact chezmoi-linux-musl-amd64
      uses: actions/upload-artifact@v2
      with:
        name: chezmoi-linux-musl-amd64
        path: dist/chezmoi-cgo-musl_linux_amd64/chezmoi
    - name: Upload artifact chezmoi-darwin-amd64
      uses: actions/upload-artifact@v2
      with:
        name: chezmoi-darwin-amd64
        path: dist/chezmoi-nocgo_darwin_amd64/chezmoi
    - name: Upload artifact chezmoi-darwin-arm64
      uses: actions/upload-artifact@v2
      with:
        name: chezmoi-darwin-arm64
        path: dist/chezmoi-nocgo_darwin_arm64/chezmoi
    - name: Upload artifact chezmoi-windows-amd64.exe
      uses: actions/upload-artifact@v2
      with:
        name: chezmoi-windows-amd64.exe
        path: dist/chezmoi-nocgo_windows_amd64/chezmoi.exe
  generate:
    runs-on: ubuntu-18.04
    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GO_VERSION }}
    - name: Checkout
      uses: actions/checkout@v2
    - name: Cache Go modules
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Generate
      run: |
        go generate
        git diff --exit-code
  lint:
    runs-on: ubuntu-18.04
    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GO_VERSION }}
    - name: Checkout
      uses: actions/checkout@v2
    - name: Cache Go modules
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Lint
      uses: golangci/golangci-lint-action@v2
      with:
        version: v${{ env.GOLANGCI_LINT_VERSION }}
    - name: ShellCheck
      uses: ludeeus/action-shellcheck@1.1.0
      with:
        ignore: completions
    - name: Whitespace
      run: go run ./internal/cmds/lint-whitespace
    - name: Typos
      run: |
        go install github.com/twpayne/findtypos@latest
        findtypos chezmoi .
  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs:
    - generate
    - lint
    - test
    - test-release
    runs-on: ubuntu-18.04
    steps:
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get -yq --no-install-suggests --no-install-recommends install musl-tools snapcraft
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GO_VERSION }}
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cache Go modules
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Snapcraft login
      env:
        SNAPCRAFT_LOGIN: ${{ secrets.SNAPCRAFT_LOGIN }}
      run: |
        snapcraft login --with <(echo "$SNAPCRAFT_LOGIN" | base64 -d)
    - name: Release
      uses: goreleaser/goreleaser-action@v2
      with:
        version: latest
        args: release
      env:
        GITHUB_TOKEN: ${{ secrets.GORELEASER_GITHUB_TOKEN }}
    # The following is needed because chezmoi upgrade and
    # assets/scripts/install.sh have inconsistently looked for
    # chezmoi_${VERSION}_checksums.txt and checksums.txt. To ensure
    # compatibility with all versions, upload checksums.txt as well.
    - name: Upload checksums.txt
      run: |
        VERSION=${GITHUB_REF##*/v}
        cp dist/chezmoi_${VERSION}_checksums.txt dist/checksums.txt
        gh release upload v${VERSION} dist/checksums.txt
      env:
        GITHUB_TOKEN: ${{ secrets.GORELEASER_GITHUB_TOKEN }}
