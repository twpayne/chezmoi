[unix] chmod 755 bin/op
[windows] unix2dos bin/op.cmd

mkhomedir

# test that mode is properly set and reported
exec chezmoi execute-template '{{ .chezmoi.config.onepassword.mode }}'
stdout '^service$'

# test failure without OP_SERVICE_ACCOUNT_TOKEN set
! exec chezmoi execute-template '{{ (onepassword "ExampleLogin").id }}'
stderr 'OP_SERVICE_ACCOUNT_TOKEN is not set'

env OP_SERVICE_ACCOUNT_TOKEN=x

# test onepassword template function
exec chezmoi execute-template '{{ (onepassword "ExampleLogin").id }}'
stdout '^wxcplh5udshnonkzg2n4qx262y$'

# test onepassword template function with vault
exec chezmoi execute-template '{{ (onepassword "ExampleLogin" "vault").id }}'
stdout '^wxcplh5udshnonkzg2n4qx262y$'

# test failure onepassword template function with vault and account
! exec chezmoi execute-template '{{ (onepassword "ExampleLogin" "vault" "account").id }}'
stderr '1Password account parameters cannot be used in service mode'

# test onepassword template function with empty vault
exec chezmoi execute-template '{{ (onepassword "ExampleLogin" "").id }}'
stdout '^wxcplh5udshnonkzg2n4qx262y$'

# test onepasswordDetailsFields template function
exec chezmoi execute-template '{{ (onepasswordDetailsFields "ExampleLogin").password.value }}'
stdout '^L8rm1JXJIE1b8YUDWq7h$'

# test onepasswordItemFields template function
exec chezmoi execute-template '{{ (onepasswordItemFields "ExampleLogin").exampleLabel.value }}'
stdout exampleValue

# test onepasswordRead template function
exec chezmoi execute-template '{{ onepasswordRead "op://vault/item/field" }}'
stdout exampleField

# test failure onepasswordRead template function with account
! exec chezmoi execute-template '{{ onepasswordRead "op://vault/item/field" "account" }}'
stderr '1Password account parameters cannot be used in service mode'

# test onepasswordDocument template function
exec chezmoi execute-template '{{ onepasswordDocument "exampleDocument" }}'
stdout 'OK-COMPUTER'

# test onepasswordDocument template function with vault
exec chezmoi execute-template '{{ onepasswordDocument "exampleDocument" "vault" }}'
stdout 'OK-VAULT'

# test onepasswordDocument template function with vault and account
! exec chezmoi execute-template '{{ onepasswordDocument "exampleDocument" "vault" "account" }}'
stderr '1Password account parameters cannot be used in service mode'

# test onepasswordDocument template function with account
! exec chezmoi execute-template '{{ onepasswordDocument "exampleDocument" "" "account" }}'
stderr '1Password account parameters cannot be used in service mode'

# test failure with OP_CONNECT_HOST and OP_CONNECT_TOKEN set
env OP_CONNECT_HOST=x
env OP_CONNECT_TOKEN=y
! exec chezmoi execute-template '{{ (onepassword "ExampleLogin").id }}'
stderr 'OP_CONNECT_HOST and OP_CONNECT_TOKEN'

-- bin/op --
#!/bin/sh

if [ "$*" = "--version" ]; then
    echo 2.0.0
elif [ "$*" = "item get --format json ExampleLogin --vault vault --account account_uuid" ]; then
    echo "[ERROR] cannot use accounts with OP_SERVICE_TOKEN set" 1>&2
    exit 1
elif [ "$*" = "item get --format json ExampleLogin --account account_uuid" ]; then
    echo "[ERROR] cannot use accounts with OP_SERVICE_TOKEN set" 1>&2
    exit 1
elif [ "$*" = "--session thisIsAFakeSessionToken item get --format json ExampleLogin --vault vault --account account_uuid" ]; then
    echo "[ERROR] cannot use accounts with OP_SERVICE_TOKEN set" 1>&2
    exit 1
elif [ "$*" = "--session thisIsAFakeSessionToken item get --format json ExampleLogin --account account_uuid" ]; then
    echo "[ERROR] cannot use accounts with OP_SERVICE_TOKEN set" 1>&2
    exit 1
elif [ "$*" = "item get --format json ExampleLogin" ]; then
    echo '{"id":"wxcplh5udshnonkzg2n4qx262y","title":"ExampleLogin","version":1,"vault":{"id":"tscpxgi6s7c662jtqn3vmw4n5a"},"category":"LOGIN","last_edited_by":"YO4UTYPAD3ZFBNZG5DVAZFBNZM","created_at":"2022-01-17T01:53:50Z","updated_at":"2022-01-17T01:55:35Z","sections":[{"id":"Section_cdzjhg2jo7jylpyin2f5mbfnhm","label":"Related Items"}],"fields":[{"id":"username","type":"STRING","purpose":"USERNAME","label":"username","value":"exampleuser "},{"id":"password","type":"CONCEALED","purpose":"PASSWORD","label":"password","value":"L8rm1JXJIE1b8YUDWq7h","password_details":{"strength":"EXCELLENT"}},{"id":"notesPlain","type":"STRING","purpose":"NOTES","label":"notesPlain"},{"id":"cqn7oda7wkcsar7rzcr52i2m3u","section":{"id":"Section_cdzjhg2jo7jylpyin2f5mbfnhm","label":"Related Items"},"type":"STRING","label":"exampleLabel","value":"exampleValue"}],"urls":[{"primary":true,"href":"https://www.example.com/"}]}'
elif [ "$*" = "item get --format json ExampleLogin --vault vault" ]; then
    echo '{"id":"wxcplh5udshnonkzg2n4qx262y","title":"ExampleLogin","version":1,"vault":{"id":"tscpxgi6s7c662jtqn3vmw4n5a"},"category":"LOGIN","last_edited_by":"YO4UTYPAD3ZFBNZG5DVAZFBNZM","created_at":"2022-01-17T01:53:50Z","updated_at":"2022-01-17T01:55:35Z","sections":[{"id":"Section_cdzjhg2jo7jylpyin2f5mbfnhm","label":"Related Items"}],"fields":[{"id":"username","type":"STRING","purpose":"USERNAME","label":"username","value":"exampleuser "},{"id":"password","type":"CONCEALED","purpose":"PASSWORD","label":"password","value":"L8rm1JXJIE1b8YUDWq7h","password_details":{"strength":"EXCELLENT"}},{"id":"notesPlain","type":"STRING","purpose":"NOTES","label":"notesPlain"},{"id":"cqn7oda7wkcsar7rzcr52i2m3u","section":{"id":"Section_cdzjhg2jo7jylpyin2f5mbfnhm","label":"Related Items"},"type":"STRING","label":"exampleLabel","value":"exampleValue"}],"urls":[{"primary":true,"href":"https://www.example.com/"}]}'
elif [ "$*" = "--session thisIsAFakeSessionToken item get --format json ExampleLogin --vault vault" ]; then
    echo "[ERROR] cannot use session tokens with OP_SERVICE_TOKEN set" 1>&2
    exit 1
elif [ "$*" = "--session thisIsAFakeSessionToken item get --format json ExampleLogin" ]; then
    echo "[ERROR] cannot use session tokens with OP_SERVICE_TOKEN set" 1>&2
    exit 1
elif [ "$*" = "account list --format=json" ]; then
    echo "[ERROR] cannot use accounts with OP_SERVICE_TOKEN set" 1>&2
    exit 1
elif [ "$*" = "signin --account account_uuid --raw" ]; then
    echo "[ERROR] cannot sign in with OP_SERVICE_TOKEN set" 1>&2
    exit 1
elif [ "$*" = "signin --raw" ]; then
    echo "[ERROR] cannot sign in with OP_SERVICE_TOKEN set" 1>&2
    exit 1
elif [ "$*" = "document get exampleDocument" ]; then
    echo 'OK-COMPUTER'
elif [ "$*" = "document get exampleDocument --vault vault" ]; then
    echo 'OK-VAULT'
elif [ "$*" = "--session thisIsAFakeSessionToken document get exampleDocument" ]; then
    echo "[ERROR] cannot use session tokens with OP_SERVICE_TOKEN set" 1>&2
    exit 1
elif [ "$*" = "--session thisIsAFakeSessionToken document get exampleDocument --vault vault" ]; then
    echo 'OK-VAULT'
elif [ "$*" = "--session thisIsAFakeSessionToken document get exampleDocument --account account_uuid" ]; then
    echo "[ERROR] cannot use accounts or session tokens with OP_SERVICE_TOKEN set" 1>&2
    exit 1
elif [ "$*" = "--session thisIsAFakeSessionToken document get exampleDocument --vault vault --account account_uuid" ]; then
    echo "[ERROR] cannot use accounts or session tokens with OP_SERVICE_TOKEN set" 1>&2
    exit 1
elif [ "$*" = "read --no-newline op://vault/item/field" ]; then
    echo 'exampleField'
elif [ "$*" = "--session thisIsAFakeSessionToken read --no-newline op://vault/item/field" ]; then
    echo "[ERROR] cannot use session tokens with OP_SERVICE_TOKEN set" 1>&2
    exit 1
elif [ "$*" = "--session thisIsAFakeSessionToken read --no-newline op://vault/item/field --account account_uuid" ]; then
    echo "[ERROR] cannot use session tokens or accounts with OP_SERVICE_TOKEN set" 1>&2
    exit 1
else
    echo "[ERROR] 2020/01/01 00:00:00 unknown command \"$*\" for \"op\"" 1>&2
    exit 1
fi
-- bin/op.cmd --
@echo off
IF "%*" == "--version" (
    echo 2.0.0
) ELSE IF "%*" == "item get --format json ExampleLogin --vault vault --account account_uuid" (
    echo.[ERROR] cannot use accounts with OP_SERVICE_TOKEN set 1>&2
    exit /b 1
) ELSE IF "%*" == "item get --format json ExampleLogin --account account_uuid" (
    echo.[ERROR] cannot use accounts with OP_SERVICE_TOKEN set 1>&2
    exit /b 1
) ELSE IF "%*" == "--session thisIsAFakeSessionToken item get --format json ExampleLogin --vault vault --account account_uuid" (
    echo.[ERROR] cannot use accounts with OP_SERVICE_TOKEN set 1>&2
    exit /b 1
) ELSE IF "%*" == "--session thisIsAFakeSessionToken item get --format json ExampleLogin --account account_uuid" (
    echo.[ERROR] cannot use accounts with OP_SERVICE_TOKEN set 1>&2
    exit /b 1
) ELSE IF "%*" == "item get --format json ExampleLogin" (
    echo.{"id":"wxcplh5udshnonkzg2n4qx262y","title":"ExampleLogin","version":1,"vault":{"id":"tscpxgi6s7c662jtqn3vmw4n5a"},"category":"LOGIN","last_edited_by":"YO4UTYPAD3ZFBNZG5DVAZFBNZM","created_at":"2022-01-17T01:53:50Z","updated_at":"2022-01-17T01:55:35Z","sections":[{"id":"Section_cdzjhg2jo7jylpyin2f5mbfnhm","label":"Related Items"}],"fields":[{"id":"username","type":"STRING","purpose":"USERNAME","label":"username","value":"exampleuser "},{"id":"password","type":"CONCEALED","purpose":"PASSWORD","label":"password","value":"L8rm1JXJIE1b8YUDWq7h","password_details":{"strength":"EXCELLENT"}},{"id":"notesPlain","type":"STRING","purpose":"NOTES","label":"notesPlain"},{"id":"cqn7oda7wkcsar7rzcr52i2m3u","section":{"id":"Section_cdzjhg2jo7jylpyin2f5mbfnhm","label":"Related Items"},"type":"STRING","label":"exampleLabel","value":"exampleValue"}],"urls":[{"primary":true,"href":"https://www.example.com/"}]}
) ELSE IF "%*" == "item get --format json ExampleLogin --vault vault" (
    echo.{"id":"wxcplh5udshnonkzg2n4qx262y","title":"ExampleLogin","version":1,"vault":{"id":"tscpxgi6s7c662jtqn3vmw4n5a"},"category":"LOGIN","last_edited_by":"YO4UTYPAD3ZFBNZG5DVAZFBNZM","created_at":"2022-01-17T01:53:50Z","updated_at":"2022-01-17T01:55:35Z","sections":[{"id":"Section_cdzjhg2jo7jylpyin2f5mbfnhm","label":"Related Items"}],"fields":[{"id":"username","type":"STRING","purpose":"USERNAME","label":"username","value":"exampleuser "},{"id":"password","type":"CONCEALED","purpose":"PASSWORD","label":"password","value":"L8rm1JXJIE1b8YUDWq7h","password_details":{"strength":"EXCELLENT"}},{"id":"notesPlain","type":"STRING","purpose":"NOTES","label":"notesPlain"},{"id":"cqn7oda7wkcsar7rzcr52i2m3u","section":{"id":"Section_cdzjhg2jo7jylpyin2f5mbfnhm","label":"Related Items"},"type":"STRING","label":"exampleLabel","value":"exampleValue"}],"urls":[{"primary":true,"href":"https://www.example.com/"}]}
) ELSE IF "%*" == "--session thisIsAFakeSessionToken item get --format json ExampleLogin --vault vault" (
    echo.[ERROR] cannot use session tokens with OP_SERVICE_TOKEN set 1>&2
    exit /b 1
) ELSE IF "%*" == "--session thisIsAFakeSessionToken item get --format json ExampleLogin" (
    echo.[ERROR] cannot use session tokens with OP_SERVICE_TOKEN set 1>&2
    exit /b 1
) ELSE IF "%*" == "account list --format=json" (
    echo.[ERROR] cannot use accounts with OP_SERVICE_TOKEN set 1>&2
    exit /b 1
) ELSE IF "%*" == "signin --account account_uuid --raw" (
    echo.[ERROR] cannot sign in with OP_SERVICE_TOKEN set 1>&2
    exit /b 1
) ELSE IF "%*" == "signin --raw" (
    echo.[ERROR] cannot sign in with OP_SERVICE_TOKEN set 1>&2
    exit /b 1
) ELSE IF "%*" == "document get exampleDocument" (
    echo.OK-COMPUTER
) ELSE IF "%*" == "document get exampleDocument --vault vault" (
    echo.OK-VAULT
) ELSE IF "%*" == "--session thisIsAFakeSessionToken document get exampleDocument" (
    echo.[ERROR] cannot use session tokens with OP_SERVICE_TOKEN set 1>&2
    exit /b 1
) ELSE IF "%*" == "--session thisIsAFakeSessionToken document get exampleDocument --vault vault" (
    echo.[ERROR] cannot use session tokens with OP_SERVICE_TOKEN set 1>&2
    exit /b 1
) ELSE IF "%*" == "--session thisIsAFakeSessionToken document get exampleDocument --account account_uuid" (
    echo.[ERROR] cannot use accounts or session tokens with OP_SERVICE_TOKEN set 1>&2
    exit 1
) ELSE IF "%*" == "--session thisIsAFakeSessionToken document get exampleDocument --vault vault --account account_uuid" (
    echo.[ERROR] cannot use accounts or session tokens with OP_SERVICE_TOKEN set 1>&2
    exit 1
) ELSE IF "%*" == "read --no-newline op://vault/item/field" (
    echo.exampleField
) ELSE IF "%*" == "--session thisIsAFakeSessionToken read --no-newline op://vault/item/field" (
    echo.[ERROR] cannot use session tokens with OP_SERVICE_TOKEN set 1>&2
    exit /b 1
) ELSE IF "%*" == "--session thisIsAFakeSessionToken read --no-newline op://vault/item/field --account account_uuid" (
    echo.[ERROR] cannot use session tokens or accounts with OP_SERVICE_TOKEN set 1>&2
    exit /b 1
) ELSE (
    echo "[ERROR] 2020/01/01 00:00:00 unknown command \"%*\" for \"op\"" 1>&2
    exit /b 1
)
-- home/user/.config/chezmoi/chezmoi.toml --
[onepassword]
mode = "service"
