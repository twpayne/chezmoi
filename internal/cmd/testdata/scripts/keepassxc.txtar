mockcommand bin/keepassxc-cli

# test keepassxcAttachment template function
stdin $HOME/input
exec chezmoi execute-template --no-tty '{{ keepassxcAttachment "example.com" "attachment" }}'
stdout '# contents of attachment'

# test keepassxcAttribute template function
stdin $HOME/input
exec chezmoi execute-template --no-tty '{{ keepassxcAttribute "example.com" "host-name" }}'
stdout example\.com$

# test keepassxc template function and that password is only requested once
stdin $HOME/input
exec chezmoi execute-template --no-tty '{{ (keepassxc "example.com").UserName }}/{{ (keepassxc "example.com").Password }}'
stdout examplelogin/examplepassword$

-- bin/keepassxc-cli.yaml --
responses:
- args: '--version'
  response: '2.7.0'
- args: 'attachment-export --key-file /secrets.key /secrets.kdbx --quiet --stdout example.com attachment'
  windowsArgs: 'attachment-export --key-file /secrets.key C:/secrets.kdbx --quiet --stdout example.com attachment'
  response: '# contents of attachment'
- args: 'show --key-file /secrets.key /secrets.kdbx --quiet --show-protected example.com'
  windowsArgs: 'show --key-file /secrets.key C:/secrets.kdbx --quiet --show-protected example.com'
  response: |
    Title: example.com
    UserName: examplelogin
    Password: examplepassword
    URL:
    Notes:
- args: 'show --key-file /secrets.key /secrets.kdbx example.com --attributes host-name --quiet --show-protected'
  windowsArgs: 'show --key-file /secrets.key C:/secrets.kdbx example.com --attributes host-name --quiet --show-protected'
  response: 'example.com'
default:
  response: 'keepassxc-cli: invalid command: $*'
  exitCode: 1
-- home/user/.config/chezmoi/chezmoi.toml --
[keepassxc]
    args = ["--key-file", "/secrets.key"]
    database = "/secrets.kdbx"
-- home/user/input --
fakepassword
